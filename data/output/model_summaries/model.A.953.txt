.. codeblock python from flask import flask from flaskldapconn import ldapconn app flaskname ldap ldapconnapp client sample .. codeblock python from flask import flask from flaskldapconn import ldapconn from ldap3 import subtree app flaskname ldap ldapconnapp app.route def index ldapc ldap.connection basedn oupeopledcexampledccom searchfilter objectclassposixaccount attributes sn givenname uid mail ldapc.searchbasedn searchfilter subtree attributesattributes response ldapc.response user model samples .. codeblock python from flask import flask from flaskldapconn import ldapconn app flaskname ldap ldapconnapp class userldap.entry basedn oupeopledcexampledccom objectclasses inetorgperson name ldap.attributecn email ldap.attributemail userid ldap.attributeuid surname ldap.attributesn givenname ldap.attributegivenname with app.appcontext get a list of entries entries user.query.filteremail example.com.all for entry in entries print uname .formatentry.name get the first entry user user.query.filteruserid user1.first new entry newuser user nameuser three emailuser3example.com useriduser3 surnamethree givennameuser newuser.save modify entry moduser user.query.filteruserid user1.first moduser.name user number three moduser.email.append.u.threeexample.com moduser.givenname.delete moduser.save remove entry rmuser user.query.filteruserid user1.first rmuser.delete authenticate user authuser user.query.filteruserid user1.first if authuser if authuser.authenticatepassword1234 printauthenticated else printwrong password authenticate with client .. codeblock python from flask import flask from flaskldapconn import ldapconn app flaskname ldap ldapconnapp username user1 password userpass attribute uid searchfilter active1 with app.appcontext retval ldap.authenticateusername password attribute basedn searchfilter if not retval return invalid credentials.