phaser 3 controls plugin a simple plugin to assist with creating control schemes and combos with keyboard inputs for phaser 3 demo httpsretrovx.github.iophaser3controlsplugin getting started prerequisites phaser 3.16 install or download from zip install as a global scene plugin use phasercontrolsplugin.js or phasercontrolsplugin.min.js game config levelscene.js or import into a phaser scene use phasercontrols.js or phasercontrols.min.js config phaser 3 keycodes docs examples add new control scheme add multiple control schemes access controls access control schemes create wasd keys wasd shift space or cursor keys up down left right shift space get control scheme object select control scheme to use javascript scheme pass in either the control scheme name string or object this.controls.setactivescheme or javascript scheme pass in either the control scheme name string or object this.controls.switchscheme edit control scheme javascript let getscheme this.controls.getazerty scheme object string pass in control scheme to edit config object config to replace chosen control scheme this.controls.editgetscheme name azertyedit active false controls up z down s left q right d shift shift space space delete control scheme javascript delete control scheme scheme pass in either control scheme name string or object destroy phaser v3.16 boolean removes keys and removes captures this.controls.deletescheme destroy enable keys javascript enables keys from active control scheme this.controls.enablekeys disable keys javascript disables keys from active control scheme this.controls.disablekeys create a key combo basic example javascript config options const comboconfig combo aa the combo to use name optional name to reference by if needed data optional data to pass into the combo event resetonmatch true optional reset the combo on match default false maxkeydelay 450 optional the delay between key presses if longer then it resets the combo default 0 deleteonmatch false optional delete the combo when the combo is complete default false schemes mycontrolscheme1 controlscheme2 optional control schemes that use this combo default global onmatch functionscene event function to call when the combo is a match onmatchonce functionscene event same as onmatch but only runs once create the combo to dash player left let dashleft this.controls.createcombo combo aa onmatch functionscene scene.player.x 100 create a combo that only works if yourcontrolscheme is active let dashleftwasd this.controls.createcombo combo aa schemes yourcontrolscheme onmatch functionscene scene.player.x 100 delete combo dashleft.delete create the konami code javascript this.controls.createkonamicodefunctionscene window.alert30 lives record player key inputs javascript use inside the update function this.controls.recordkeys returns an array with an object for each key pressed the object contains key keycode duration the key was down timestamp of when the key was down convert a keycode to a key javascript a helper function to input a keycode or an array of keycodes and convert them to phaser key strings this.controls.keycodetokey37 returns left this.controls.keycodetokey37 39 returns left right debug control scheme text javascript setup debug controls text click on text to switch to next control scheme x y fontsize font color this.controls.debugtext200 200 20 000000 levelscene.js example javascript export default class levelscene extends phaser.scene constructor super preload this.load.imageplayer assetsplayer.png create this.player this.add.sprite400 400 player const config name cursorkeys active true controls up up down down left left right right shift shift space space attack z this.controls.addconfig where the current keys are stored this.controls.keys this.controls.keys.up this.controls.keys.down this.controls.keys.left this.controls.keys.right this.controls.keys.shift this.controls.keys.space this.controls.keys.attack updatetime delta ifthis.controls.keys.up.isdown this.player.y 4 else ifthis.controls.keys.down.isdown this.player.y 4 ifthis.controls.keys.left.isdown this.player.x 4 else ifthis.controls.keys.right.isdown this.player.x 4 ifthis.controls.keys.space.isdown do something else ifthis.controls.keys.attack.isdown do something else todo create more examples made with phaser.io