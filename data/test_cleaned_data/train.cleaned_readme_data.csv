,id,link,summary,readme
0,136653971,https://api.github.com/repos/guiquan156/svgs2font,"translate svgs to iconfont, and create demo", iconfont install cli usage iconfontconfigjs the svgicons2svgfonthttpsgithubcomnfroiduresvgicons2svgfontsvgicons2svgfontoptions are available optionsfontname required optionsfontweight optionsfontstyle optionsfixedwidth optionscenterhorizontally optionsnormalize optionsfontheight optionsround optionsdescent optionsmetadata optionslog other options use to show all options use in node 
1,137341400,https://api.github.com/repos/levi-turner/60f3cacb-c4ee-47d3-8a40-9f23530c0267,NodeJS process to monitor service uptime in Qlik Sense, contents notificationadderlistenerzip zipped directory with needed node scripts required modules servicestatuscsv example output details this nodejs script does the following 1 creates a notification handle for any changes to the servicestatus qlik sense repository entity filtered on only the engine service post qrsnotificationnameservicestatusfilterservicetype eq 3changetype2propertynametimestamp for more details on the qrs notification api refer to thishttpscommunityqlikcomt5qlikarchitecturedeepdiveblogqliksenserepositorynotificationapibap1582905 blog post 2 creates a listener to receive the push notification configured in step 1 3 when it receives a notification it does a get operation on the specific servicestatus entity which belongs to an engine service whos timestamp value has changed this can be due to the service restarting or due to the qlik sense repository service being unable to communicate with the nodes engine service 4 write the time at which the engine went offline to ctempservicestatuscsv notes this configuration will not persist after upgrading qlik sense either by a full upgrade or patch the servicesconf file is expected to be reverted on any upgrade or patch operation config steps for script unzip the directory into the install path for qlik sense by default cprogram filesqliksense such that there is a directory named notificationadderlistener with a file inside called serverjs note while this can be installed to any node installing this to the central node is encouraged example cprogram filesqliksensenotificationadderlistenerserverjs ensure that script runs manually open up a command prompt with administrative rights navigate to the installation path eg cd cprogram filesqliksense change the directory to the servicedispatcher service eg cd servicedispatcher launch the nodejs script manually nodenodeexe notificationadderlistenerserverjs observe that it launches wait 15 seconds restart an engine service observe the output screenshot of a notification being registeredhttpsiimgurcomm6hus1rpng observe that servicestatuscsv is created in ctemp example format configure script to initialize with the qlik sense service dispatcher service launch notepad or similar text editor with administrator rights open the servicesconf file in the install path for qlik senseservicedispatcher eg cprogram filesqliksenseservicedispatcherservicesconf at the very end append with restart the qlik sense service dispatcher service wait 15 seconds restart an engine service observe the output screenshot of a notification being registeredhttpsiimgurcomm6hus1rpng observe that servicestatuscsv is created in ctemp example format credits jesse parishttpsgithubcomjparis 
2,137111800,https://api.github.com/repos/fork-zone/guides-faq,Place to collect and organize resource documents for chingu.io, guidesfaq wip place to collect and organize resource documents for chinguio chingu guides faq faq list of questions answers under specific subgroups possibility for search guides preparing for the voyage technical gitgithub soft skills how to be a five start teammate team dynamics basics extreme ownership basics of a voyage what we expect from you how standups your reputation score work code of conduct chingu project roadmap act 1 project setup act 2 development act 3 closure project manager prep pm’s in chingu and our unique context how to prepare how to use the chingu project roadmap as a guide troubleshooting issues as a pm encouraging accountability in your team troubleshooting in teams what happens if a teammate has disappeared what happens if a project manager has disappeared what happens if i want to change the project manager what if i need to drop out of the voyage what happens if a teammate or team is not responsive lost the momentum what happens if i have a conflict with my team what happens if i want to transfer teams how to unlock the community what benefits come with a voyage how to ask for code help how to ask for other types of help at chingu we build to learn below is the project roadmap for teams voyage roadmaphttpsgithubcomchingucohortspmrokblobdevelopmentdiagramsvoyage20roadmap20diagrampng chinguvoyage buildtolearn roadmap act focus task description act 1 project setupact1projectsetup 1 meet your team 2 set goals expectations 3 set a team lead 4 brainstorm project ideas 5 define your workflow 6 setup your development environment 7 define your mvp act 2 development sprintsact2developmentsprints repeated for each sprint 1 plan the sprint 2 start the sprint 3 team standup review 4 team progress review 5 code review merge 6 completed sprint review act 3 project closureact3projectclosure 1 tidy up your code project structure 2 polish the user experience 3 deploy it 4 mvp 1 share it with trusted experienced colleagues 5 mvp 2 share it with the world 6 project retrospective meeting 7 document the experience 8 voyage completed act 1 project setup 1 meet the team goal get acquainted with your teammates suggested actions read each others intro stories share a project or two you are most proud of in your learning journey share some prime picks from your gif collection icebreakers what time zone are you in what sort of music do you like to code to what is your preferred learning style videos docs dialoge etc what are your favorite youtube channels subreddits or blogs what technologies are you most comfortable using and explaining what technologies are you most interested in learning this voyage 2 — set goals expectations goal determine the teams learning expectations and availability commitment it is critical to make sure that everyone is realistic in their level of commitment and availability working less than you commit to is disrespectful to your teammates and can stunt the teams progress and morale typically team members commit 410 hours a week towards the project learning goals evaluate everyones current technical abilities determine at least one primary technical learning goal for each teammate pick something that is 25 outside of the teams comfort zone skillset any further and you will likely be overwhelmed any less and you are limiting your rate of learning voyages go by faster than you think and you need to focus on learning through building rather than getting caught in research rabbitholes 3 — set a teamlead goal as a team decide who will be the teamlead similar to a project manager commitment this may be challenging for the group but it is critical that the team sets a teamlead the team may want to do it together but our experience is that teams who go with that style almost always fail the teamlead will serve as the de facto project manager and will have access to resources and will be added to a support channel with all the voyages teamleads learning goals either someone volunteers or the you suggest someone based on their background schedule feel free to message chance if your team is having a tough time with this people often think that the teamlead should be the most knowledgeable member but we have not found that to be the case at all we will provide support and resources so that anyone can take on this role a chingufacilitator will reach out after the first week to find out who is the teamlead teams that cant decide on a teamlead may be subject to closure as progress is tough without someone invested in moving it forward 4 — brainstorm project options goal decide on a project to pursue tips stay focused on what is possible as a balance of the cohort seasons length team experience and the commitment level remember to incorporate as many team learning goals as are feasible the goal is to learn something new not to stay stuck only working with what you know the stack front end consider the library framework your project will use back end consider the backend language and library framework database consider the database type and orm your team will use to interact with it it is better to underpromise and overdeliver especially if this is your first voyage 5 —define your workflow goal decide on which workflow tools the team will use tips dont go overboard workflow tools are only useful when they are used keep it simple so that using the tools feels effortless rather than a chore if you dont already have a workflow or specific tools in mind consider the suggestions below suggested workflow tools besides the obvious slack and github the following are tools that work for many chingu teams wafflehttpswwwwaffleio trello and github had a baby that makes project management a breeze discordhttpswwwdiscordcom alwayson communication tool leave it on mute while you work then unmute as needed to gain access to team mates for problem solving detours use it for clear audio while using google hangouts dont forget to mute the echo from hangouts google hangoutshttpshangoutsgooglecom a screensharing pairprogramming must until vsc live comes out suggested use hold a meeting on discord and or hangouts to discuss the key steps required to complete the next sprint use waffle to compartmentalize the steps of the sprints into grabandgo tasks leave discord on and unmute as needed to discuss and conquer roadblocks use slack for short code snippets use hangouts to screenshare for more complex debugging a proper workflow and concise collection of workflow tools is what makes the difference between a team that makes it and one that doesnt 6 — set up goal set up and explore your teams workflow tools tips check to see if your premade voyage team repo is functional and the proper permissions and settings are configured ask for help from the community with setting up tools if you get stuck dont get turned off because the setup seems daunting its a one time process take the time to do it right required make sure everyone uses the tools walk through an example usage of each tool and how they all come together work out any kinks in peoples microphones internet connections permissions etc the first sprint is not the time to learn how to use the tools at hand get comfortable early so you can focus on building not technical difficulties 7— define the mvp goal hold a meeting to decide on the minimum viable product mvp tips deciding on the mvp for the project is the most important step your team must take before embarking on your voyage consider the features that can together serve at minimum as a functioning prototype of the projects vision defining the mvp is committing to the bare minimum you and the team will accomplish before the cohort deadline focus points front end consider the views and their associated functionality back end consider the endpoints routes and associated logic database consider the complexity of the database and associated models deployment consider how where you will host the project schedule a meeting schedule your next meeting to plan your first sprint dont throw away those features and moonshot ideas that fall outside of the scope of the mvp shoot for finishing the mvp ahead of schedule so the extra time can be used to implement those additional features and polish act 2 development sprints 1 plan the sprint goal subdivide the mvp into a features sprint notes determine a starting point for working towards the completion of the mvp the tasks for each sprint should require 1 week or less to complete do your best but dont worry if you underestimate the required time you can reflect and adjust in the next sprint tips select one or more toplevel features from the mvp and explore how it can be broken down into individual tasks think about the order in which the tasks will be completed and mark those that can be worked on independently or in parallel the team should take ample time to explore the sprint and all of its tasks everyone should be aware of the sprint on a conceptual and somewhat of a technical level high level implementation details can be discussed but dont lose time writing out any code or specific details finer details and coding will take place after the sprint has been thoroughly explored workflow now is the time to create cards for each of the tasks write the cards by adding descriptive titles and core details of the task as bullet points the cards should serve as guidelines to each task with links to key references or specific notes that may be forgotten finish by reviewing and assigning the cards together as a team so that everyone is on the same page and knows what they are responsible for dont spend too much time writing the cards or getting caught up with all the fancy buttons 2 — begin the sprint goal turn all that talk into code tips communicate when youre stuck dont stare at a screen alone everyone is here to learn be patient with each other and encourage open discussion and brainstorming solutions to roadblocks use the help channels and friends from other teams to resolve complex issues if your team is stumped or unavailable schedule a meeting schedule a time a few days from now to check in with everyone and make sure forward progress is being made by the team remote dev work is hard especially for beginners communicating openly and readily can make the difference between meeting a deadline or losing momentum 3 —team standup review goal review the teams progress on the sprint tips start by assessing everyones status in the sprint discuss any roadblocks that are holding back progress explore solutions together and construct an actionable plan to move forward celebrate completed tasks and share the lessons learned in working on them assess the remaining tasks and take note of how close you are to meeting this sprints weekly deadline if anyone learned anything particularly valuable or overcame an irritating block be sure to share the experience in a medium blog or discussion in the chingu chat 4 — sprint progress review goal review the teams progress on the sprint steps assess everyones status in the sprint discuss any roadblocks that are holding back progress explore solutions together and construct an actionable plan to move forward celebrate completed tasks and share the lessons learned in working on them assess the remaining tasks and take note of how close you are to meeting this sprints weekly deadline tips make sure that everyone is testing their code along the way during the next phase of reviewing and merging the code no glaring issues or immediate bugs should be present take ownership of your tasks and make sure they have been vetted before moving onto the next one 5 — code review merging goal review the code and merge into the development branch tips crossreview each others code and prevent merging without review engage in thoughtful disagreement by challenging each other respsectfully ask for clarification and add comments wherever needed openly explain decisions and implementation details test completed tasks whenever possible and seek out bugs to catch work on maintaining a consistent style across the teams code let it come organically or use a linter rules such as airbnb or google write detailed pull request notes to maintain a clear history of the project and its progress these will also help team members crossreview your prs 6 — completed sprint review goal go over the sprint and reflect on the experience gained steps assess the number of remaining tasks determine why they were left incomplete discuss how the next sprint will be improved by factoring in the lessons learned discuss how the workflow worked to or against your teams advantage discuss any new ideas that stemmed from completing the tasks create notes or cards to keep these ideas handy for the future be patient with each other and understand that its okay to miss a deadline carry over the remaining tasks and plan better for the next one note repeat sprints until the project mvp is complete act 3 project closure 1 tidy up your code file structure goal have a codebase that you can look back on proudly in a few months and still understand what you were doing when your code is clean well structured and dry you can easily share it with other programmers possible employers and future teammates tips remove extra and unnecessary consolelog statements comment your code thoroughly if youre using javascript consider the jsdoc pattern factor out any repetitive pieces of logic try to use more generic functions be careful dont make things too generic it could make the code harder to understand use common file folder structures and established community best practices in design patterns dry dont repeat yourself try to factor out portions of your logic into reusable functions classes and components so as to avoid repeating yourself code that is factored this way is said to be dry important after modifying your code make sure you test it thoroughly so as to make sure you didnt break anything 2 polish the experience goal add the finishing touches to make this project really shine this is where if you have the time you can go that extra mile an optimized experience reflects well on your abilities and increases the credebility of the project tips make it fully responsive and check your design on common screen sizes make your methods and logic more efficient decrease the size of what is downloaded by the user at least on first load 3 deploy it goal make your project publicly accessible once you deploy your project you can then share it with others so that they can review and use it this is especially useful when you want to get feedback or just when you want to perform some user tests deploying is also useful because it allows you to provide a link to a live demo version on your resume and your portfolio tips consider a simple managed hosting service like heroku or google app engine dont worry too much about infrastructure design just use the most basic setup possible so as not to run into issues search online for deployment strategies that match your stack and your use case you will find many articles and tutorials with step by step guides on how to deploy your favourite stack on a popular managed service 4 share it with trusted experienced colleagues goal gather important feedback and perform some basic user testing sharing your project with peers is an extremely helpful way of gathering useful feedback this could be feedback on the experience of your app or feedback on the actual code you can then use this feedback to further polish the experience another benefit to having many people use your application is that you are more likely to catch bugs tips share your project on chingu in communitychat and ask people to check it out share it with programmers you personally know such as friends classmates or work colleagues dont explain the application too much just give them the basic idea and let them figure out how to use it if they cant figure out how it works or if they are stuck on something then there is probably something wrong with the experience 5 share it with the world goal more feedback and testing when you share your project publicly you are likely to get even more useful feedback and catch more bugs since your audience is now much larger and more diverse this also adds to your online presence which is extremely valuable when applying for jobs tips write a medium article announcing the project and asking people to try it out share it on social media facebook twitter etc and even on professional networks such as linkedin if you are part of any other technicalhacker communities consider sharing it there too make sure the tier of hosting you are using is ready to handle the additional traffic 6 retrospective meeting goal solidify the experience and look back on everything you have accomplished organize a meeting with your team to discuss everything you have worked on the outcome you have reached the things you have learnt your experience and maybe even discuss the future of your project if you would like it to continue take this as an opportunity to compliment and more importantly critique each other this will help you improve your soft skills and also provide your teammates with important feedback that they can also use to improve themselves tips discuss the highs and the lows discuss the reasons behind the lows give honest and critical feeback but dont be unnecessarily mean take feedback from your teammates with an open mind dont be quick to snap or defend yourself use this as an opportunity to grow 7 document the experience goal increase your online presence and practice writing about your experience write about everything not just the actual project but also your experience your thoughts and your teammates this is helpful because as you move forward in your career as a programmer you will have points of reference to look back on to see how you have grown not just technically but also in terms of soft skills getting into the habit of writing a lot will help you increase your online presence and ultimately improve your chances of getting a job tips document everything regarding the experience have your teammates review it before publishing they might catch something you have forgotten share the article with your peers and with the public to increase your online presence 8 the voyage is complete faq notes chingu code of conduct behavior that will get you kicked out basics what is chingu chingu is building a global collaboration capital for 21st century techlearners to gain experience meet friends and generate impact through building projects chingu’s mission is to empower the planet’s techlearners with 21st century skills by facilitating diverse collaboration experiences and buildtolearn projects developers designers data scientists and digital marketers can all find a home here what is a voyage a voyage is an ambitious community with shared goals and an opportunity to gain experience learning and building with a team those that are accepted are organized into remote teams given prompts and various tools to aid them accelerate their learning how long is the voyage a voyage lasts 8 weeks where is chingu located chingu and all the voyages we run are 100 remote how many people are in a typical voyage a voyage has between 200300 people with an average of 75 different countries represented what are my voyage options see the current voyage list for dates is this program only for fulltime members no voyages are open to both fulltime and parttime learners what are the technical qualifications you need to have built something your very first project should not be a team project if you don’t have a finished project go build and then apply what are the nontechnical qualifications soft skills are the greatest skill we can learn and are paramount to any team’s success we don’t expect you to be a master but we do expect you to have read the prep material on soft skills how much does it cost voyages are free we are developing another product that will have a price but that is still in development who is the typical chingu voyage applicant open to collaboration accountable and hungry to levelup their skills as far as skill and experience level if 0 is just started to learn today and 100 is got a developer job chingu members come from the 15 150 range new learners who have built a project or two → experienced professional developers learning new skills new frameworks leadership mentorship curriculum what skills will i learn at chingu in a typical voyage you can expect to have the opportunity to earn various hard and soft skills hard skills gitgithub accelerated soft skills leadership time management collaboration confidence empathy conflict resolution adaptability creativity why can we use any techstack yes chingu is techstack agnostic and the team decides together what techstack to use a big portion of our teamformation algorithm is connecting people who have similar experience levels and techstack preferences most people who join chingu thus far are into webdevelopment and the most common stack is mern mongodb express react node for the more experienced and htmlcssbasic javascript for the newer learners whats a typical day like in the voyage this really depends on the team and particular voyage but building something or learning what is needed to build something likely on an average day all with the support of a community doing the same thing can i really become a developer by doing voyages yes many people get a job both during and after each voyage though see below for the next question related to this will i be guaranteed a job after completing a project people are constantly getting jobs in the chingu ecosystem but completing one voyage does not guarantee you will get a job we launch teams at all levels from newer learners building landing pages to experienced experts building full stack applications that being said by doing voyages you gain indemand hard skills and learn how to work in a modern team the two core aspects all employees look for i’m an absolute beginner with zero experience or knowledge in the subject matter you facilitate eg web development digital marketing is chingu still for me no we encourage absolute beginners to build a few projects before applying to chingu your very first project should not be a team project what makes you different from other coding bootcamps chingu isn’t a coding bootcamp we’re a collaboration capital for ambitious learners im ready how do i apply simply signup at chinguio and you will be prompted to apply how do i secure my spot in a course if you’re a first time member there’s no way to secure a spot though we try to give as many new people an opportunity once you are accepted you can secure your spot by maintaining a high reputation score besides the hours spent communicating with my team how much time do i need to dedicate to a voyage outside of communication this is dependent on your skill level the team dynamics and how outside of your comfort zone the project is for example if you’re using a techstack you’re familiar with you would need to spend much less time than if you’re learning a new framework to complete your tasks i’m interested but have very little programming experience how can i prepare our mantra is “buildtolearn” so we recommend people go out and build some basic projects what will happen after i complete an application you will receive a notification that your application has been received we review applications once a week though it can sometimes take 13 weeks to get a response back when should i apply to get into a particular voyage cohort we typically run voyages every few months so you can apply at anytime that being said to be safe we recommend applying 68 weeks early what if i am accepted into chingu and need to change my start date for reasonable issues or emergencies we can defer enrollment chingu’s pace what is the policy on absence for special events weddings trips etc it all depends on the specific context the voyage is 8 weeks so for most cases as long as you communicate and the team adapts as necessary it’s fine laziness or apathy are not appropriate excuses chingu is a meritocracy and your actions now will dictate your opportunities in the future on the platform your peers will be rating you out of 5 each week as a teammate and the average of those ratings will dictate whether you can join a voyage in the future as well as the type of teammates you may have ex people who have a score of 2 likely have issues with unreliability and it wouldn’t be fair to place them with someone who has proven to be reliable what is the policy on dropping out for emergencies emergencies happen and applications prevoyage how can i prepare before a voyage begins upon acceptance you’ll be given a voyageprep roadmap with various resources and suggestions to help you prepare for your voyage how are teams matched together we use a variety of parameters and this is changing constantly as we improve but it involves timezone techstack familiarity and commitment availability during the voyage who decides projects the team decides on the project we provide project prompts based on the team’s general level and highly encourage inexperienced teams to follow these prompts but ultimately it is the team who decides are all projects unique no about half the projects are unique projects and the other half are clones of popular startups like airbnb or spotify the goal at chingu is to learn and build so both are welcomed how do you work together every team is unique but all teams will be given the same structure and tools to help them work together you’re given a team slack channel for communication a project roadmap to follow and if possible a project manager we also have mandatory weekly checkin forms to help ensure team communication and accountability what platform do teams work on a typical team will utilize a workflow that includes the following platforms slack discord google hangouts for team communication and meetings git github for a code repository github projects waffle or trello for task management chingu platform for team standups motivation what if i have questions along the way you definitely will have questions and there will be many areas to ask them including team channels community chats a question channel and by making a ticket what happens if we dont complete our project in time in a typical voyage we may launch 70110 different teams these teams will range from people working on landing pages to data science projects to full stack applications projects will have different ambition levels and scope and some won’t be able to finish in the time frame that is completely okay and we always have some teams that transfer into the next voyage to continue working on it team issues what happens if a teammate has disappeared what happens if a project manager has disappeared what happens if i want to change the project manager what if i need to drop out of the voyage what happens if a teammate or team is not responsive lost the momentum after the voyage when do we submit the projects projects are submitted when the project mvp minimum viable project is completed before or at the end of the 8 week voyage eligible project mvps will be showcased in chingu’s project showcase article how do we submit projects they’ll be project submission form in your team portal where the project can be submitted towards the end of the voyage we will notify the community with clear instructions on how to submit as well what happens next you get a job take a break andor apply for another voyage press im writing an article and want to learn more about chingu who do i contact please reach out at adminchinguio and we’ll get back to you 
3,136909957,https://api.github.com/repos/alexhoma/routex.js,Tiny library to manage dynamic and universal routes in Next.js,routexjs yes another library to handle dynamic routes in nextjs features milkyway universal leaves tree shakeable ant not tiny but pretty small link build your custom on top of it tada same routes contract as nextroutes name pattern page rocket up to date pathtoregexp dependency earthafrica compatible with routes localization sunglasses cool name inspired by nextroutes and nextminimalroutes install install routex in your nextjs project using yarn setup route definitions okay so now we have installed routex first of all well need to declare our application routes so lets create a routesjs file if you need more info on how to create the route patterns check the pathtoregexp documentation pillarjspathtoregexp server getrequesthandler once routes are declared we want to handle it whenever a user loads any existing url in our application so here we need to create our routex requesthandlermiddleware in our serverjs file passing the nextjs instance nextapp and our route definitions routes like this client link hooray our server now handles dynamic routes but now we need a way to create link components to point to that dynamic routes so lets create a file customlinkjs to use in our components the createroutelinks function transforms and closures all your routes and returns a new link function this link is the one that will provide to the component the as and href props and it needs this two parameters route a route name the one that you have in the route definiton params all dynamic params and this is how youll use your component the output that will return your will be exactly the same that if you create a link using the current nextjs link like ill show you in this example currently there is no imperative way to change your app route using routexjs like the nextroutes routerpushrouteroute params options because i didnt need it at all in my current applications but im open to add it if someone finds it interesting since then ill try to keep this library as simple as possible for more information have a look into the example appexamples directory demo motivation check out this blog post to know some of the reasons why ive decided to create another routing library alexhomacomprojectsroutexjsyetanotherrouterfornextjs things to do x add an example with multidomain application since routexjs doesnt need react at all add an example with other nextjs integrations like preact inferno etc avoid loading all route definitions in client side only the ones we use per page contributions if you want to suggest a change feature or any question feel free to open an issue or a pull request npmversion httpsbadgennetnpmvroutexjs travisbuild httpstraviscicomalexhomaroutexjssvgbranchmaster bundlephobiaminbadge httpsbadgennetbundlephobiaminroutexjs bundlephobiaminzipbadge httpsbadgennetbundlephobiaminziproutexjs nextroutes httpsgithubcomfridaysnextroutes fridaysnextroutes nextminimalroutes httpsgithubcomlydellnextminimalroutes lydellnextminimalroutes routes localization exampleswithroutelocalization pillarjspathtoregexp httpsgithubcompillarjspathtoregexp alexhomacomprojectsroutexjsyetanotherrouterfornextjs httpsalexhomacomprojectsroutexjsyetanotherrouterfornextjs 
4,137109302,https://api.github.com/repos/ezhaohongwei/leaflet.tilelayer.glcolorscale,Custom Leaflet TileLayer using WebGL to colorize pixels according to a specified color scale, leaflettilelayerglcolorscale custom leaflet tilelayer using webgl to colorize floatingpoint pixels according to a specified color scale features gpu rendering a small configuration language for describing how to colorize pixels optional animated perpixel transitions when changing url or color scales raw float pixel value provided to mouse event handlers a simple declarative api typescript definitions demo try it out herehttpsihmeuwgithubioleaflettilelayerglcolorscaledemo you can find the demo code in the demo directory of this repository accessing the plugin with module loader install reference as ecmascript module or as commonjs module with script tag fetching from cdn usage a bit of history at ihmehttpwwwhealthdataorg we produce raster datasets showing the geographical distribution of diseases medical interventions and other measures each pixel represents our best estimate of the value of a given measure expressed as a floatingpoint number at that location our researchers wanted to visualize this data using linear color scales by which each floatingpoint pixel would be translated to a color at first we processed these raster tilesets serverside sending colorized png tiles to the web application then we discovered we could colorize faster with clientside rendering on the gpu having the raw floatingpoint values available clientside also allowed us to show the pixel values on mouse hover tile format we decided to use png files as an interchange format for getting our floatingpoint raster data to the browser primarily because it seems to be the most common format for raster data on map tile servers our approach is similar to the way demhttpsenwikipediaorgwikidigitalelevationmodel tiles often encode noncolor values into the rgba channels or more abstractly the 32 bits of each pixel in a png file dem tiles typically encode 32bit integers though while we encode 32bit floats which have a much wider range but uneven resolution throughout that range given access to the binary pixel data producing these tiles is trivial we just take a buffer full of 32bit floats and hand that over to a png encoder which assumes its getting rgba pixels compression is of course not as good when you abuse the format like this we may add support in the future for other tile formats but for now this component assumes its getting png files encoded with 32bit floats updating the component rather than providing multiple methods for changing state or behavior as many builtin leaflet components do this tile layer has a single method updateoptions the api is designed to be simple and declarative like that of a react component you create a component by passing an options object to the constructor you update a component by passing an options object to updateoptions options this tilelayer accepts all the same options as leafletgridlayer and leaflettilelayer it also accepts these additional options option type default description url string undefined tile url nodatavalue number undefined pixel value to interpret as nodata colorscale color array of color stops used for linear interpolation sentinelvalues sentinelvalue array of fixed values to be matched exactly preloadurl string undefined tile url to preload in the background transitions boolean true whether to show pixel transitions when changing url or color scales transitiontimems number 800 duration of pixel transitions in miliseconds see events and handlerseventsandhandlers below for a list of callbacks that can be passed as options properties color scales heres an example color scale this tells the renderer to color pixels with value 0 or less red and value 1 or greater blue pixels with values between 0 and 1 will get a blend of red and blue because colors are linearly interpolated between each pair of adjacent stops you can have as few as two or as many as glcolorscalescalemaxlength color stops in a color scale sentinel values in addition to linear color scales its possible to specify one or more sentinel values which map discrete values to colors the format for specifying sentinel values is the same as that for color stops except that the label property is required for sentinel values but optional for color stops lets change the above example just a little now pixels whose values are exactly 0 will be colored red and pixels whose values are exactly 1 will be colored blue we havent specified what to do for values other than 0 or 1 so the behavior for such values would be undefined in this case sentinel values only match the precise value specified within a tiny margin of error the maximum number of sentinel values the component will accept can be accessed via glcolorscalesentinelmaxlength nodata value typically with raster tiles one will want some pixels eg pixels over oceans or other bodies of water to be fully transparent we support this behavior with a special kind of sentinel value called the nodata value by encoding a nodata value into your raster tiles for pixels that should be transparent and then specifying this value via the nodatavalue property of the options object you can tell the tile layer to render these pixels as fully transparent any valid 32bit float can be chosen for a sentinel value or the nodata value but its wise to choose a value thats well outside the range of expected data values transitions this tile layer supports animated transitions when changing either the url or the color scale you can specify the transition time in milliseconds with the options property transitiontimems if you dont want transitions you can turn them off by setting transitions false in the options object events and handlers you can register handler functions for some events by passing them as properties on the options object when the component is created note that this is a bit different from the way handlers are registered on typical leaflet components the following table shows the mapping of options properties to corresponding events property event onload load onclick click ondblclick dblclick onmousedown mousedown onmouseup mouseup onmouseover mouseover onmouseout mouseout onmousemove mousemove oncontextmenu contextmenu this component extends the event object provided to leaflet mouse event handlers adding a property pixelvalue that represents the value of the pixel under the cursor this value will be undefined if the pixel has the nodata value if the pixel value matches a sentinel value the sentinelvalue object will be provided as pixelvalue otherwise pixelvalue will match the numerical value of the pixel heres an example of registering a handler for the the click event preloading tiles you can optionally preload a tile set in the background by supplying its url as the options property preloadurl this behavior facilitates quickly switching to a new tile set when you know in advance what its url will be as for instance when scripting your leaflet visualization to be notified when the new tile set has finished loading register a handler on the load event and check that the url property on the event object matches your preloadurl then you can switch to the new tile set by passing its url as optionsurl 
